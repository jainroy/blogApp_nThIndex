openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /auth/login/:
    post:
      operationId: auth_login_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /auth/password-reset-complete/:
    patch:
      operationId: auth_password_reset_complete_partial_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSetNewPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSetNewPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSetNewPassword'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNewPassword'
          description: ''
  /auth/password-reset/{uidb64}/{token}/:
    get:
      operationId: auth_password_reset_retrieve
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/register/:
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /auth/request-reset-email/:
    post:
      operationId: auth_request_reset_email_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPasswordResetEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestPasswordResetEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestPasswordResetEmail'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPasswordResetEmail'
          description: ''
  /auth/verify-email/:
    get:
      operationId: auth_verify_email_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailVerification'
          description: ''
  /blog/:
    get:
      operationId: blog_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - blog
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogList'
          description: ''
    post:
      operationId: blog_create
      tags:
      - blog
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
  /blog/{id}/:
    get:
      operationId: blog_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - blog
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
    put:
      operationId: blog_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
    patch:
      operationId: blog_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlog'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
    delete:
      operationId: blog_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - blog
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /blog/report/:
    post:
      operationId: blog_report_create
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportUser'
          description: ''
components:
  schemas:
    Blog:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        content:
          type: string
        images:
          type: string
          format: uri
          nullable: true
        videos:
          type: string
          format: uri
          nullable: true
        author:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - author
      - content
      - created_at
      - title
      - updated_at
    EmailVerification:
      type: object
      properties:
        token:
          type: string
          maxLength: 555
      required:
      - token
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
          minLength: 3
        password:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
        username:
          type: string
          readOnly: true
          maxLength: 255
          minLength: 3
        tokens:
          type: string
          readOnly: true
          maxLength: 68
          minLength: 6
      required:
      - email
      - password
      - tokens
      - username
    PaginatedBlogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Blog'
    PatchedBlog:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        content:
          type: string
        images:
          type: string
          format: uri
          nullable: true
        videos:
          type: string
          format: uri
          nullable: true
        author:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSetNewPassword:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
        token:
          type: string
          writeOnly: true
          maxLength: 555
        uidb64:
          type: string
          writeOnly: true
          maxLength: 555
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
      required:
      - email
      - password
      - username
    ReportUser:
      type: object
      properties:
        username:
          type: string
          default: string
          description: Username of the user to report
          maxLength: 255
          minLength: 3
    RequestPasswordResetEmail:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
          minLength: 3
      required:
      - email
    SetNewPassword:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
        token:
          type: string
          writeOnly: true
          maxLength: 555
        uidb64:
          type: string
          writeOnly: true
          maxLength: 555
      required:
      - password
      - token
      - uidb64
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
